<?xml version="1.0"?>
<doc>
<assembly>
<name>
GameServer
</name>
</assembly>
<members>
<member name="F:GameServer.DatabaseInfoClass.SeatNumber">
 <summary>
 座位号
 </summary>
</member>
<member name="F:GameServer.DatabaseInfoClass.TotalWinNum">
 <summary>
 各分区总赢次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.DatabaseInfoClass.Percentage">
 <summary>
 游戏输赢百分比，用于 总赢积分/总押注积分>百分比 必输...
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.DatabaseInfoClass.TotalBet">
 <summary>
 各分区总押注积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.DatabaseInfoClass.TotalWin">
 <summary>
 各分区总赢积分
 </summary>
 <remarks></remarks>
</member>
<member name="M:GameServer.DatabaseInfoClass.SelectAspDbThread">
 <summary>
 查询数据库所有机台参数信息，并给变量赋值
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iAwardOdds">
 <summary>
 各种奖项的赔率
 </summary>
 <remarks>分别记录：1樱桃，2樱桃，3樱桃连线，4橘子连线，5苹果连线，6葡萄连线，7西瓜连线，8乱BAR连线，9小BAR连线，10中BAR连线，11大BAR连线，12乱7连线，13蓝7连线，14红7连线，15天下连线，16水果盘，17ALL樱桃，18ALL橘子，19ALL苹果，20ALL葡萄，21ALL西瓜，22ALL乱BAR，23ALL小BAR，24ALL中BAR，25ALL大BAR，26ALL乱7，27ALL蓝7，28ALL红7，29、2天下，30、3天下/31、4天下/32、5天下/33、6天下/34、7天下/35、8天下/36、ALL天下/37、2蓝7/38、3蓝7/39、4蓝7/40、5蓝7/41、6蓝7/42、7蓝7/43、8蓝7/44、2红7/45、3红7/46、4红7/47、5红7/48、6红7/49、7红7/50、8红7</remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iCellNum">
 <summary>
 每个奖项占用格子的数量
 </summary> 
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sPrizePicture">
 <summary>
 每个奖项对应的图片，1红7 2蓝7 3大RAB 4中RAB 5小RAB 6西瓜 7葡萄 8苹果 9橘子 10樱桃 11天下
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sLineRank">
 <summary>
 '8条连线的排列
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sOneCherrySeat">
 <summary>
   '一个樱桃的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sTwoCherrySeat">
 <summary>
  '两个樱桃的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sAllSeat">
 <summary>
  '9个格子所有位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sMixBarRank">
 <summary>
  '混B的所有排列组合
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sMix7Rank">
 <summary>
  '混7的所有排列组合
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sOtherRank">
 <summary>
 '其他连线的排列组合
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iOddsSeat">
 <summary>
   'all赔率所对应的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iBlue7OddsSeat">
 <summary>
  '蓝7个数赔率所对应的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iRed7OddsSeat">
 <summary>
  红7个数赔率所对应的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.iWorldOddsSeat">
 <summary>
 天下个数赔率所对应的位置
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sNotCompareCards">
 <summary>
 比倍时 随机生成的没有比过倍的牌
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.sTheFirstSixCards">
 <summary>
 比倍时 sNotCompareCards的前六张牌，当sNotCompareCards中小于6时取全部
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.GameAlgorithmClass.RecordError">
 <summary>
 继承数据库类的方法 记录错误
 </summary>
</member>
<member name="M:GameServer.GameAlgorithmClass.MustWin(System.Collections.Generic.List{System.Double},GameServer.UserClass)">
 <summary>
 用户必赢时的逻辑
 </summary>
 <param name="_OddsList">保存中的什么奖项的集合，是全盘其一、还是疯狂送等等</param>
 <param name="_userinfo0">用户</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.MustLost">
 <summary>
 用户必输的逻辑
 </summary>
 <returns>返回未中奖的字符串</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.CrazySendOverAll(System.Int32)">
 <summary>
 疯狂送中奖 强制中全盘的函数
 </summary>
 <param name="_WinType">1/2/3 中奖的类型 1红七 2蓝七 3天下</param>
 <returns>返回数据（疯狂送全盘奖的参数,下注分数,排除的奖项）</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.WinData(System.Int32,System.Int32,System.String[0:,0:])">
 <summary>
 普通中奖返回数据
 </summary>
 <param name="_GameSubarea">分区号</param>
 <param name="_GameBill">下注数量</param>
 <param name="_SubareaParameter">分区参数</param>
 <returns>返回数据（中奖内容，下注分数，""）</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.FilterData(System.Collections.Generic.List{System.String},System.Int32,System.String)">
 <summary>
 过滤生成最终数据
 </summary>
 <param name="_AwardParameters">奖项所占格子数，奖项序号，赔率</param>
 <param name="_GameBill">下注分数</param>
 <param name="_Remove">排除的奖项</param>
 <returns>返回数据 msg ： 九个位置图片代号 ， 中奖图片赔率所对应的位置|10+中奖图片的个数|中奖图片个数的赔率 "%" </returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.CrazySendData(System.Int32,System.Int32,System.Int32)">
 <summary>
 疯狂送中奖返回数据 
 </summary>
 <param name="_CanWin">0或1 0是不可以中奖ALL 1是可以中奖ALL</param>
 <param name="_WinType">1/2/3 中奖的类型 1红七 2蓝七 3天下</param>
 <param name="_SeveralCell">1-9 要中几个</param>
 <returns> '返回数据：中几个，什么奖，倍数，8，排除的奖项</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.NotWinStr">
 <summary>
  未中奖的字符串生成
 </summary>
 <returns>返回str：未中奖的九个位置上的图片代号</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.ProduceRandom(System.String)">
 <summary>
 产生一个随机数(不包括括号内的)
 </summary>
 <param name="_str">该随机数不包括的数字</param>
 <returns>返回一个随机数</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.ArrayChangeStr(System.String[])">
 <summary>
 数组转字符串
 </summary>
 <param name="_sList">一个数组：九个位置上的图片代号</param>
 <returns>九个位置图片代号的字符串</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.ArrayAddStr(System.String[],System.String[],System.Int32)">
 <summary>
 数组内添加字符串
 </summary>
 <param name="_str">字符串容器</param>
 <param name="_sParameter">奖项所占格子数，奖项序号，赔率</param>
 <param name="_bottom">押注倍数</param>
 <returns>返回参数_str容器数组，里边所对应的奖项位置上已经赋值中奖图片代号</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.DeleteNonEmptyCell(System.String[],System.String[])">
 <summary>
  去掉非空的格子
 </summary>
 <param name="stra">字符串容器：九个位置，全为空</param>
 <param name="strb">是奖项的位置数组</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.OnLineIfWin(System.String,System.Int32,System.Boolean)">
 <summary>
 8条连线是否中奖的判断
 </summary>
 <param name="_str"> 第一条连线的第一个位置的图片代号 + 第二个位置图片代号 + 第三个位置的图片代号   </param>
 <param name="_Num">'记录是第几条中奖线</param>
 <param name="_Mix7">用来判断是不是混7</param>
 <returns>'返回值 = 中奖图片赔率所对应的位置|第几条中奖线|该奖项的赔率</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.Mix7MixBarWorld(System.String[])">
 <summary>
 混B混7天下的判断
 </summary>
 <param name="_str">九个位置的图片代号数组</param>
 <returns> '返回值 = 天下个数赔率所对应的位置|10+天下的个数|天下个数的赔率</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.InitialiseInfo(System.Int32)">
 <summary>
 初始化比倍信息
 </summary>
 <param name="_ThanCard">分区号</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.UpdateCardData(System.Int32,GameServer.UserClass,System.Int32)">
 <summary>
 返回比倍结果，并将相关左右牌数据进行更新
 </summary>
 <param name="_iMaxMin">1/大，2/小</param>
 <param name="_userinfo0">该用户</param>
 <param name="_iIfLosing">是否必输,1不是必输 ,2是必输</param>
 <returns>0和，1赢，2输</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.GameAlgorithmClass.CompareResults(GameServer.UserClass,System.Int32)">
 <summary>
 后加的比倍结果,让玩家必比必输，押大给小，押小给大
 </summary>
 <param name="userinfo0"></param>
 <param name="ria"></param>
 <remarks></remarks>
</member>
<member name="T:GameServer.LogicModule">
 <summary>
 逻辑代码模块
 </summary>
</member>
<member name="F:GameServer.LogicModule.GameMachineCount">
 <summary>
 游戏开放的机器数量（机台数量）默认80
 </summary>
</member>
<member name="F:GameServer.LogicModule.PersistGameTime">
 <summary>
 表示遊戲時間，如果在這一時間段沒有任何操作，我們將採取措施  原来g_gametime
 </summary>
</member>
<member name="F:GameServer.LogicModule.SeatNumber">
 <summary>
 座位号
 </summary>
</member>
<member name="F:GameServer.LogicModule.AlgorithmClass">
 <summary>
 算法实体类  Note number
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.DatabaseClass">
 <summary>
 数据库类
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendRnd">
 <summary>
 即时送的随机 1-5中的一个
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.VietnamStation">
 <summary>
 越南分站
 </summary>
</member>
<member name="F:GameServer.LogicModule.Synchrolock">
 <summary>
 同步锁
 </summary>
</member>
<member name="F:GameServer.LogicModule.TotalBetNum">
 <summary>
 各分区总押次数 设置即时连线送和连线送结束后为其赋值，其余时间不变
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.BetNum">
 <summary>
 各分区总押次数 每押一次该值加1
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.OverallRecord">
 <summary>
 當前中全盤積分的記錄 格式为：帐号，中奖积分，中奖类型（十个初始值的顺序chushi）,第几分区，日期  recoBetNumrd(0)表示所有分区内最近中的5个大奖，record(x)表示个分区中的大奖
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Blue7Money">
 <summary>
 蓝7奖金 对应参数设置中的当前蓝7全盘积分 
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Red7Money">
 <summary>
 红7奖金 对应参数设置中的当前红7全盘积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.WorldMoney">
 <summary>
 天下奖金 对应参数设置中的当前天下全盘积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CherryIfOpen">
 <summary>
 对应樱桃连线以上的奖项是否开放 1开放 0不开放
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Blue7Bonus">
 <summary>
 蓝7 奖金抽分   游戏押注分数乘以百分之多少累计为蓝7全盘积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Red7Bonus">
 <summary>
 红7 奖金抽分   游戏押注分数乘以百分之多少累计为红7全盘积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.WorldBonus">
 <summary>OverallRecord
 天下 奖金抽分   游戏押注分数乘以百分之多少累计为天下全盘积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenBlue7All">
 <summary>
 是否开放蓝7全盘 0不可中，1可中 
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenRed7All">
 <summary>
 是否开放红7全盘 0不可中，1可中
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenWorldAll">
 <summary>
 是否开放天下全盘 0不可中，1可中
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ForceWin">
 <summary>
 强制中奖的设置   1蓝7、2红7、3天下、4樱桃连线、5水果盘、6小B连线、7樱桃全盘、8铆钉全盘、9苹果全盘、10葡萄全盘、11西瓜全盘、12杂B全盘、13小B全盘、14中B全盘、15大B全盘、16杂7全盘
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenCrazySendCherry">
 <summary>
 疯狂送奖项是否开放-是否开放樱桃连线 0不开放，1开放
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenCrazySendBar">
 <summary>
 疯狂送奖项是否开放-是否开放小B连线 0不开放，1开放
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfOpenCrazySendFruitDish">
 <summary>
 疯狂送奖项是否开放-是否开放水果盘连线 0不开放，1开放
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.VipParameter">
 <summary>
设置自动VIP的字符串 '10,6,3,2|10,6,3,2|10,6,3,2|10,6,3,2|0'   VIP设置部分几分|几位|几进|几出|自动模式(选中则为1) 
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.UsersLimit">
 <summary>
对应f_users 设置会员限制 被设置的用户将不能中连线以上的奖项
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Blue7StartIntegral">
 <summary>
 蓝7全盘 积分起始分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Red7StartIntegral">
 <summary>
 红7全盘 积分起始分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.WorldStartIntegral">
 <summary>
 天下全盘 积分起始分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Blue7MaxIntegral">
 <summary>
 蓝7全盘 积分最高分数限制
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Red7MaxIntegral">
 <summary>
 红7全盘 积分最高分数限制
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.WorldMaxIntegral">
 <summary>
 天下全盘 积分最高分数限制
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CrazySendPercentage">
 <summary>
 疯狂送 遊戲輸贏百分比0.6 ，疯狂送中，中奖的比例 该值越大中奖率越大
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalCherryNum">
 <summary>
 各人樱桃连线的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalFruitDishNum">
 <summary>
 个人水果盘的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalSmallBarNum">
 <summary>
 个人小B的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.BureauRed7Bonus">
 <summary>
 本局所中的红7全盘彩金
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.BureauBlue7Bonus">
 <summary>
 本局所中的蓝7全盘彩金
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.BureauWorldBonus">
 <summary>
 本局所中的天下全盘彩金
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CardsNum">
 <summary>
 sTheFirstSixCards中牌的张数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.LastOne">
 <summary>
 比倍最后一张
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CompareInitialPoints">
 <summary>
 比倍的初始分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.RightCardStr">
 <summary>
 右边已有的字符串，或许是空 即比过的牌
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.RightShowSix">
 <summary>
 比倍时的右边显示.6个以内
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ShowCards">
 <summary>
 比倍要显示的牌
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PushButton">
 <summary>
 控制中3个连线的按钮
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalCherryNumMax">
 <summary>
 各人樱桃连线的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySend">
 <summary>
 即时送翻倍的变量 ，true表示可以即时送
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendLeft">
 <summary>
 即时送左边随机 （櫻桃.铆丁.蘋果.葡萄.西瓜.小BAR.中BAR.大BAR）
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendRight">
 <summary>
 即时送右边随机
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendLeftRnd">
 <summary>
 即时送左边随机
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfImmediatelyLineSend">
 <summary>
 是否是即时连线送
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendNum">
 <summary>
 存储即时连线送的第几次
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendRightRnd">
 <summary>
 即时送右边随机
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfJGGcherry">
 <summary>
 用来判断是否中了九宫格的樱桃
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfJGGfruit">
 <summary>
 用来判断是否中了九宫格的水果盘
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfJGGSmallBar">
 <summary>
 用来判断是否中了九宫格的小B
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalFruitDishNumMax">
 <summary>
 个人水果盘的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.PersonalSmallBarNumMax">
 <summary>
 个人小B的次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CompareNum">
 <summary>
 比倍次数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.LastOperationTime">
 <summary>
 最后一次操作的时间
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.Subregion">
 <summary>
 分区参数信息
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.RecordError">
 <summary>
 继承数据库类的方法 记录错误
 </summary>
</member>
<member name="F:GameServer.LogicModule._ClientSocket">
 <summary>
 客户端SOCKET对象，用于连接登入服务器
 </summary>
</member>
<member name="F:GameServer.LogicModule.ToDataBank">
 <summary>
 声明一个 调用数据库的类
 </summary>
</member>
<member name="F:GameServer.LogicModule.IfSomeOneBet">
 <summary>
 表示AP启动后是否有人下注
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.NoteSingle">
 <summary>
 用来保存每个玩家发送的启动命令
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ResidueScore">
 <summary>
 当前积分减去下注积分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.EndPoints">
 <summary>
 各分区底分 Subregion(x-1,3)
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.NowIfForceWin">
 <summary>
 当局是否中了强制奖项
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.RoomRatio">
 <summary>
  房间比例
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfUserLimit">
 <summary>
 是否有会员限制，0没有 1限制模式  2低于当前模式
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.DemoInitialPoints">
 <summary>
 给演示用的初始分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CrazySendWinScore">
 <summary>
 记载疯狂送的总赢分数(针对修改记录的处理)
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfRecordCrazySendScore">
 <summary>
 是否需要记载疯狂送分数(针对修改记录的处理)   -----------------------这个变量有的位置需要加上  对照一下
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CrazySendScore">
 <summary>
 触发疯狂送时的连线得分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.RecordGameMessage">
 <summary>
 記錄步驟记录游戏演示信息 
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfCrazySend">
 <summary>
 是否疯狂送 0：不是疯狂送   1：樱桃(蓝7)  2：水果盘(红7)  3：小BAR(天下)
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.MyCrazySend">
 <summary>
 我的疯狂送
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.MyCrazySendLimit">
 <summary>
 我的疯狂送额度
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.MyCrazySendScore">
 <summary>
 我的疯狂送分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfFreeFiveNum">
 <summary>
 记录疯狂送(免费游戏)是否贏夠五次
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfSettleAccounts">
 <summary>
 是否已结算 0未结算 1已发送结算但未返回 2已返回
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CompareBreakLine">
 <summary>
 true表示比倍中断线，此时待中心服务器结算后再退出
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.CrazySendBreakLine">
 <summary>
 true表示疯狂送中断线，此时待中心服务器结算后再退出
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfCanCompare">
 <summary>
 是否可以比倍
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.IfSatrtCompare">
 <summary>
 是否已经开始比倍
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ComparedScore">
 <summary>
 比倍后的分
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ImmediatelySendDouble">
 <summary>
 即时送翻倍 true表示中了即时连线送
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ToCenterSendMessage">
 <summary>
 向中心服务器发送的信息
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.ItemVersion">
 <summary>
 项目版本号(每次版本更新修改)
 </summary>
</member>
<member name="F:GameServer.LogicModule.Update">
 <summary>
 //3秒线程
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.LogicModule.AccumulateJackpotThread">
 <summary>
 向登录服务器发送当前在机台的用户和累计蓝7，红7，天下彩金的线程
 </summary>
</member>
<member name="M:GameServer.LogicModule.UpdateParameter">
 <summary>
 更新后台设置页参数
 </summary>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.SendHandselMessage">
 <summary>
 获取并发送彩金信息
 </summary>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.ItemInitialise">
 <summary>
 过程特点：UI线程、被动触发
 触发条件：服务器程序点击【启动】按钮后，自动触发本过程
 作用说明：主要用于变量初始化或自定义线程、过程等
 </summary>
</member>
<member name="M:GameServer.LogicModule.UesrNewConnEvent(GameServer.UserClass@)">
 <summary>
  用户连入事件（新用户）
 </summary>
</member>
<member name="M:GameServer.LogicModule.SendToAll(System.String)">
 <summary>
 向所有人发送信息
 </summary>
</member>
<member name="M:GameServer.LogicModule.UesReconnEvent(GameServer.UserClass@)">
 <summary>
 用户连入事件（旧用户重连）
 </summary>
</member>
<member name="M:GameServer.LogicModule.UserDisconnEvent(GameServer.UserClass@)">
 <summary>
 用户断线事件
 </summary>
 <param name="_User"></param>
</member>
<member name="M:GameServer.LogicModule.UesrReceiveEvent(System.String,System.String,GameServer.UserClass@)">
 <summary>
 用户接收数据事件
 </summary>
 <param name="_Tab">数据标头</param>
 <param name="_Data">数据内容</param>
 <param name="_User">用户</param>
</member>
<member name="M:GameServer.LogicModule.ToCenterServerSendData(System.String)">
 <summary>
 向中心服务器发送结算数据
 </summary>
 <param name="_Str">
 数据格式为：游戏标记|分区号|桌子号|实际参与游戏中人数|自定义数据|记录数据|用户1，得分,ip|用户2，得分,ip|用户3，得分....</param>
 如：ZYJZ|77|1|1|5|趙雲救主 77區br>(1:20)br>投注30條線，每線投注：100分，總投注：3000分br>第3條線,撥浪鼓圖案,得分:2000 /font>br>本局除了Jackpot共得分：2000||AW61-1,-50,127.0.0.1,150,150,1
 <remarks>注：此方法发送后，中心服务器处理后，会返回结果信息.</remarks>
</member>
<member name="M:GameServer.LogicModule.JudgmentLine(GameServer.UserClass,System.String)">
 <summary>
 判断中奖线
 </summary>
 <param name="_User">玩家用户</param>
 <param name="_BetNum">玩家的 下注倍数</param>
 <returns> 返回该玩家的中奖参数信息</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.ClearingScore(GameServer.UserClass)">
 <summary>
 结算
 </summary>
 <param name="_UserInfo">玩家</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.BreakLineReconnection(GameServer.UserClass)">
 <summary>
 断线重连逻辑
 </summary>
 <param name="_User">玩家</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.CrazySendOffLineSettle(GameServer.UserClass)">
 <summary>
 疯狂送离线结算
 </summary>
 <param name="_User">玩家信息</param>
 <remarks>在疯狂送中断线固定时间内没有重连成功时，自动执行此方法执行完剩余次数的疯狂送</remarks>
</member>
<member name="M:GameServer.LogicModule.ToCenterSendWinInfo(GameServer.UserClass)">
 <summary>
 向中心服务器发送ZHONG的方法
 </summary>
 <param name="_User">玩家信息</param>
 <returns>'返回数据-> SGP|分区号|座位号|1|中奖类别(0正常的，4疯狂送，1红7全盘，2蓝7全盘，3天下全盘，10比倍)|汉字中将格式|“”|账号，赢得分数，注单号，下注分数，下注分数</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.WinTextDescription(System.String)">
 <summary>
 中奖文字描述
 </summary>
 <param name="_WinMessage">保存中奖信息的，包括什么类型奖项，以及多少注</param>
 <returns>返回的也是中奖信息 "1個櫻桃連線10注 1個櫻桃連線10注"</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.WinStr(GameServer.UserClass,System.Int32,System.Int32)">
 <summary>
 中奖字符串，获得userinfo0.User_5  汉字记录中奖格式为 1個荔枝連線几注
 </summary>
  <param name="_User">玩家信息</param>
 <param name="_Awards">中的什么奖</param>
  <param name="_Multiple">压的几注</param>
 <returns>返回字符串，中奖格式为  "1個荔枝連線" jb  "注"</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.CrazySendOverall(GameServer.UserClass,System.Int32)">
 <summary>
 疯狂送时中全盘
 </summary>
 <param name="_User">玩家信息</param>
 <param name="_CrazySendType">疯狂送类型，1蓝7，2红7，3天下</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.OverallWinMessage(GameServer.UserClass)">
 <summary>
 '全盘彩金奖项中奖信息
 </summary>
 <param name="_User">玩家信息</param>
 <returns>返回中奖信息  SGP|分区|桌子|1|1|玩家名称|本局获得红7全盘彩金|玩家IP参数，0,0，在线方式，系统信息</returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.OnLineBonus(GameServer.UserClass,System.Double@,System.Double@,System.Double@)">
 <summary>
 判断连线奖金，把最后的连线奖金求出来
 </summary>
 <param name="_User">玩家信息</param>
 <param name="_BlueIntegral">蓝7积分</param>
 <param name="_RedIntegral">红7积分</param>
 <param name="_WorldIntegral">天下积分</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.OnlineBonusJudge(GameServer.UserClass,System.Double@,System.Double@,System.Int32)">
 <summary>
 连线奖金判断，额度和玩家的分之间转化
 </summary>
 <param name="_User">玩家信息</param>
 <param name="_OverallBonus">本局所中的全盘彩金</param>
 <param name="_CurrentBonus">当前彩金池奖金</param>
<param name="_Type">全盘奖的类型、1红 2蓝 3天下</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.GetTwoString(System.String)">
 <summary>
 字符串转换成double
 </summary>
 <param name="_WinMessage">中奖参数信息</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.CrazySendWinData(System.Int32,GameServer.UserClass)">
 <summary>
 疯狂送奖项的WinData
 </summary>
 <param name="_Awards">判断是何奖项，1红、2蓝、3天下</param>
 <param name="_User">玩家信息</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.GetCrazySendInfo">
 <summary>
 获得疯狂送奖项信息
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.OutClearData(GameServer.UserClass,System.Boolean)">
 <summary>
 退出时初始化相关变量
 </summary>
 <param name="_User">玩家信息</param>
  <param name="_Type">判断玩家是否离线，true为离线退出游戏，false是正常退出游戏</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.IfOverAll(GameServer.UserClass)">
 <summary>
 判断是否中全盘
 </summary>
 <param name="_User">玩家信息</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.LongTimeNoOperate">
 <summary>
 很久不操作时踢出用户
 </summary>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.MachineParameters(System.String)">
 <summary>
 作用说明：主要用于机台游戏参数初始化赋值内存变量
 </summary>
 <param name="_Message">查询数据库返回的分区信息</param>
</member>
<member name="M:GameServer.LogicModule.IfRestrictedAccount(System.String)">
 <summary>
 判断是否是被限制账号,限制会员樱桃连线以上的奖项不开放
 </summary>
 <param name="_UserAccounts">用户账号，用来判断该用户是否被限制账号</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.ShowGameMessage(System.String,System.Int32,GameServer.UserClass)">
 <summary>
 更新后台设置页的游戏消息
 </summary>
 <param name="_StateMessage">描述用户状态信息字符串</param>
 <param name="_IfCrazySend">是否是疯狂送， 1：樱桃(蓝7)  2：水果盘(红7)  3：小BAR(天下)</param>
 <param name="_User">玩家信息</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.UpdateOverAllNum(System.Int32,System.Int32)">
 <summary>
 更新数据库中的f_Winning(ALL天下,ALL红7,ALL蓝7,ALL大B,ALL中B,ALL杂7,天天天,红777,蓝777,小BAR，樱桃连线，水果盘，小Bar)
 </summary>
 <param name="_Zone">区号</param>
 <param name="_Number">f_Winning数据中的第几个</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.SimulationCenterServer(System.String,GameServer.UserClass)">
 <summary>
 作用说明：模拟中心服务器
 接收 服务器向中心服务器发送的数据，然后模拟中心服务器给  服务器返回一个数据，来保证正常进行游戏
 需要根据此数据，提示FLASH端输赢情况，以及状态
 </summary>
 <param name="_Value">中心服务器返回计算得分结果的数据</param>
</member>
<member name="M:GameServer.LogicModule.StartInstantDelivery(GameServer.UserClass)">
 <summary>
 创始时间：2016-1-1 创始人： XXXX  
 描述：随机出即时连线送.即时送开始
 修改时间：2016-12-1 修改人：吴昊
 修改描述：
 </summary>
 <param name="_User">玩家信息</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.LogicModule.SettleAccountsInfo(System.String)">
 <summary>
 过程特点：线程、被动触发
 触发条件：中心服务器输赢结果和状态数据触发
 作用说明：接收到的数据是中心服务器返回的，需要根据此数据，提示FLASH端输赢情况，以及状态
 </summary>
 <param name="_Value">中心服务器返回计算得分结果的数据</param>
</member>
<member name="T:GameServer.ToDatabankClass">
 <summary>
 对数据库进行操作的函数集合类
 </summary>
</member>
<member name="F:GameServer.ToDatabankClass.ConfigDB">
 <summary>
 配置数据库控制对象
 </summary>
</member>
<member name="M:GameServer.ToDatabankClass.#ctor(System.String)">
 <summary>
 构造方法
 </summary>
 <param name="_ConfigDatabase"></param>
</member>
<member name="F:GameServer.ToDatabankClass.AllZoneStr">
 <summary>
 用来读取所有分区参数信息的 连接数据库字符串
 </summary>
</member>
<member name="F:GameServer.ToDatabankClass.XMLInfo">
 <summary>
 新NEW一个XML类
 </summary>
</member>
<member name="F:GameServer.ToDatabankClass.GameTab">
 <summary>
 获取游戏标记
 </summary>
</member>
<member name="M:GameServer.ToDatabankClass.SelectNewDate">
 <summary>
 查询 本游戏的所有机台参数 信息
 </summary>
 <returns></returns>
</member>
<member name="M:GameServer.ToDatabankClass.SelectWinningOfSgp(System.Int32)">
 <summary>
 查询数据库中的
 </summary>
 <returns></returns>
 <remarks>(ALL天下,ALL红7,ALL蓝7,ALL大B,ALL中B,ALL杂7,天天天,红777,蓝777,小BAR，樱桃连线，水果盘，小Bar)</remarks>
</member>
<member name="M:GameServer.ToDatabankClass.UpdateWinningOfSgp(System.String,System.Int32)">
 <summary>
 更新数据库中的f_Winning字段
 </summary>
 <param name="_fq">分区</param>
 <param name="_cftemp">数据值</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.ToDatabankClass.UpdateByGameMess(System.String,System.String,System.Int32)">
 <summary>
 修改 游戏状态信息
 </summary>
 <param name="_mess">状态信息</param>
 <param name="_account">帐号</param>
 <param name="_fq">分区</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.ToDatabankClass.UpdateMoneyOfSgp(System.Double,System.Double,System.Double)">
 <summary>
 更新水果盘彩金
 </summary>
 <param name="_Bule">蓝7全盘</param>
 <param name="_Red7">红7全盘</param>
 <param name="_TX">天下全盘</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.ToDatabankClass.UpdateZyaAndZyingCount(System.Int32,System.Int32,System.Int32)">
 <summary>
 修改 总押和总赢 次数
 </summary>
 <param name="_zy">总押</param>
 <param name="_zying">总赢</param>
 <param name="_fq">分区</param>
 <remarks></remarks>
</member>
<member name="M:GameServer.ToDatabankClass.ToGameNote(System.String,System.String,System.String)">
 <summary>
 记录调阅演示数据
 </summary>
 <param name="_BillId">演示数据ID</param>
 <param name="_Participants">玩家帐号</param>
 <param name="_Content">演示內容</param>
</member>
<member name="T:GameServer.UserClass">
 <summary>
 游戏服务器 用户类
 </summary>
</member>
<member name="F:GameServer.UserClass.CheckCode">
 <summary>
 校验码
 </summary>
</member>
<member name="F:GameServer.UserClass.MachineNumber">
 <summary>
 机台号
 </summary>
</member>
<member name="F:GameServer.UserClass.Account">
 <summary>
 游戏帐号
 </summary>
</member>
<member name="F:GameServer.UserClass.Integral">
 <summary>
 游戏积分
 </summary>
</member>
<member name="F:GameServer.UserClass.OnLine">
 <summary>
 用户是否处于连接状态
 </summary>
</member>
<member name="F:GameServer.UserClass.HeartTimes">
 <summary>
 用户心跳的验证次数
 </summary>
</member>
<member name="F:GameServer.UserClass.ActiveTime">
 <summary>
 活跃时间
 </summary>
</member>
<member name="F:GameServer.UserClass.Socket">
 <summary>
 用于通讯的SOCKET
 </summary>
</member>
<member name="M:GameServer.UserClass.SendData(System.String)">
 <summary>
 发送数据
 </summary>
 <param name="_MsgStr"></param>
</member>
<member name="M:GameServer.UserClass.Dispose">
 <summary>
 如果类中有使用非托管对象，那么当本类销毁的时候，在销毁过程中加入该对象
 </summary>
</member>
<member name="F:GameServer.UserClass.BetNumeber">
 <summary>
 押注分数
 </summary>
</member>
<member name="F:GameServer.UserClass.WinData">
 <summary>
 用来存储中奖数据(九个图片的代号  （玩家分区，押注分数，分区参数）)
 </summary>
</member>
<member name="F:GameServer.UserClass.IfOverAll">
 <summary>
 是否中全盘 1.红七2.蓝七，3.天下
 </summary>
</member>
<member name="F:GameServer.UserClass.ContinueEven">
 <summary>
 玩家是否续连
 </summary>
</member>
<member name="F:GameServer.UserClass.BreakMessage">
 <summary>
 断线时的数据信息
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.CompareMessage">
 <summary>
 断线时比倍信息
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.IfBreak">
 <summary>
 是否断线
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.IfCrazySendStart">
 <summary>
 为0时表示疯狂送开始，但还未进入,-1表示不是疯狂送，其他表示疯狂送第几次
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.ImmediatelySendClose">
 <summary>
 true表示疯狂送中即时送变暗
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.NewImmediatelySend">
 <summary>
 为1时表示中即时送后重新生成了即时送，重连后要显示新的
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.ResidualFraction">
 <summary>
 点得分之后的剩余分数以及比倍输后的剩余分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.CrazySendWinScore">
 <summary>
 疯狂送中奖分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.AllAwardsScores">
 <summary>
 中全盘奖时的分数
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.BetReset">
 <summary>
 下注分数清零
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.NoteNum">
 <summary>
 玩家注单号
 </summary>
 <remarks></remarks>
</member>
<member name="F:GameServer.UserClass.AwardAndNum">
 <summary>
 中了什么奖，和几注
 </summary>
</member>
<member name="F:GameServer.UserClass.winScore">
 <summary>
 用来保存中奖分数
 </summary>
</member>
<member name="F:GameServer.UserClass.GameState">
 <summary>
 游戏状态
 </summary>
</member>
<member name="F:GameServer.UserClass.IsPlay">
 <summary>
 用来判断玩家是否玩过
 </summary>
</member>
<member name="T:GameServer.MainModule">
 <summary>
 游戏服务器：主逻辑模块
 </summary>
</member>
<member name="F:GameServer.MainModule.ManageXML">
 <summary>
 读取XML类对象
 </summary>
</member>
<member name="F:GameServer.MainModule.ManageDB">
 <summary>
 读取数据库对象
 </summary>
</member>
<member name="F:GameServer.MainModule.ManageDB2">
 <summary>
 
 </summary>
</member>
<member name="F:GameServer.MainModule.ManageClient">
 <summary>
 管理APP连接的对象
 </summary>
</member>
<member name="F:GameServer.MainModule.ManageServer">
 <summary>
 管理连接游戏服务器的对象
 </summary>
</member>
<member name="F:GameServer.MainModule.State">
 <summary>
 当前程序状态
 </summary>
</member>
<member name="F:GameServer.MainModule.Maintenance">
 <summary>
 是否维护状态 0非 1是
 </summary>
</member>
<member name="F:GameServer.MainModule.UserList">
 <summary>
 所有玩家集合Key记录校验码
 </summary>
</member>
<member name="F:GameServer.MainModule.MainTh">
 <summary>
 主线程
 </summary>
</member>
<member name="M:GameServer.MainModule.MainStart">
 <summary>
 主线程启动
 </summary>
</member>
<member name="M:GameServer.MainModule.StartTheGameServer">
 <summary>
 启动游戏服务器
 </summary>
</member>
<member name="M:GameServer.MainModule.Reset">
 <summary>
 重置本程序
 </summary>
</member>
<member name="T:GameServer.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:GameServer.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:GameServer.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:GameServer.ToListenClientClass">
 <summary>
 与客户端交互的模块
 </summary>
</member>
<member name="F:GameServer.ToListenClientClass._ListenServer">
 <summary>
 监听APP连入的服务器SOCKET
 </summary>
</member>
<member name="M:GameServer.ToListenClientClass.#ctor(System.String,System.Int32,System.Int32)">
 <summary>
 构造方法
 </summary>
</member>
<member name="M:GameServer.ToListenClientClass.Dispose">
 <summary>
 销毁本类
 </summary>
</member>
<member name="M:GameServer.ToListenClientClass.UesrReceiveAppEvent(System.String,ToolModule.ServerUserClass)">
 <summary>
 当有接收应用层数据自动触发
 </summary>
 <param name="_Msgstr"></param>
 <param name="_SocketUser"></param>
</member>
<member name="F:GameServer.ToListenClientClass.HeartTh">
 <summary>
 心跳验证线程
 </summary>
</member>
<member name="M:GameServer.ToListenClientClass.HeartTest">
 <summary>
 心跳测试掉线
 </summary>
</member>
<member name="F:GameServer.ToListenClientClass.NoActiveTh">
 <summary>
 长时间未操作控制线程
 </summary>
</member>
<member name="M:GameServer.ToListenClientClass.NoActiveTh1">
 <summary>
 长时间未操作方法 5分钟踢掉
 </summary>
</member>
<member name="T:GameServer.ToConfigDBclass">
 <summary>
 向数据库交互的模块
 </summary>
</member>
<member name="F:GameServer.ToConfigDBclass.DBconnect">
 <summary>
 数据库连接状态
 </summary>
</member>
<member name="F:GameServer.ToConfigDBclass.ConfigDB">
 <summary>
 数据库控制对象
 </summary>
</member>
<member name="M:GameServer.ToConfigDBclass.#ctor(System.String)">
 <summary>
 构造方法，
 </summary>
 <param name="_ConfigDatabase"></param>
</member>
<member name="M:GameServer.ToConfigDBclass.LoadGameServerConfigInfo(System.String)">
 <summary>
 获取游戏服务器监听信息
 </summary>
 <param name="_TagName">游戏表示</param>
 <returns></returns>
</member>
<member name="M:GameServer.ToConfigDBclass.LoadLoginServerConfig">
 <summary>
 读取登入服务器监听IP和端口
 </summary>
 <returns></returns>
</member>
<member name="M:GameServer.ToConfigDBclass.LoadGOtherDBConnstr(System.String)">
 <summary>
 读取其他数据库连接字符串（帐号、注单、调阅 暂时不用）
 </summary>
 <param name="_TagName"></param>
 <returns></returns>
</member>
<member name="M:GameServer.ToConfigDBclass.WriteGameServerState(System.String,System.Int32,System.String)">
 <summary>
 记录游戏服务器状态状态
 </summary>
</member>
<member name="M:GameServer.ToConfigDBclass.WriteGameServerLog(System.String,System.String)">
 <summary>
 写入游戏服务器运行日记
 </summary>
 <param name="_TagName">游戏标记</param>
 <param name="_Content">内容</param>
</member>
<member name="M:GameServer.ToConfigDBclass.WriteGameServerErr(System.String,System.String,System.Exception)">
 <summary>
 写入游戏服务器错误记录
 </summary>
 <param name="_TagName">游戏标记</param>
 <param name="_Content">内容</param>
 <param name="_EX">异常对象</param>
</member>
<member name="F:GameServer.ToConfigDBclass.TotalCount">
 <summary>
 累计数量
 </summary>
</member>
<member name="F:GameServer.ToConfigDBclass.PresentMinute">
 <summary>
 当前时间
 </summary>
</member>
<member name="M:GameServer.ToConfigDBclass.WriteExcessCheck(System.Int32,System.String)">
 <summary>
 机制：写入过量检测
 当调用WriteGameServerLog或WriteGameServerErr 1分钟内调用超过30次，将超出的记录到文件中
 </summary>
</member>
<member name="T:GameServer.ToLoginServerClass">
 <summary>
 与登入服务器交互的模块
 </summary>
</member>
<member name="F:GameServer.ToLoginServerClass._ClientSocket">
 <summary>
 客户端SOCKET对象，用于连接登入服务器
 </summary>
</member>
<member name="M:GameServer.ToLoginServerClass.#ctor(System.String,System.Int32)">
 <summary>
 构造方法，同时开启连接登入服务器
 </summary>
 <param name="_ServerIP"></param>
 <param name="_ServerPort"></param>
</member>
<member name="M:GameServer.ToLoginServerClass.Dispose">
 <summary>
 销毁本类
 </summary>
</member>
<member name="M:GameServer.ToLoginServerClass.ConnectedEvent">
 <summary>
 连接登入服务器成功时触发
 </summary>
</member>
<member name="M:GameServer.ToLoginServerClass.ReceiveEvent(System.String)">
 <summary>
 接收数据触发
 </summary>
 <param name="_Msgstr"></param>
</member>
<member name="M:GameServer.ToLoginServerClass.LeaveEvent">
 <summary>
 掉线触发
 </summary>
</member>
<member name="T:GameServer.ToXMLClass">
 <summary>
 读取XML配置信息
 </summary>
</member>
<member name="F:GameServer.ToXMLClass.TagName">
 <summary>
 游戏名称
 </summary>
</member>
<member name="F:GameServer.ToXMLClass.ConfigDatabase">
 <summary>
 游戏配置数据库连接字符串
 </summary>
</member>
<member name="M:GameServer.ToXMLClass.#ctor">
 <summary>
 构造方法，执行后会自动读取XML文件
 </summary>
</member>
<member name="M:GameServer.ToXMLClass.XMLconfigRead">
 <summary>
 XML设置档信息读取，并保存到相关变量中
 </summary>
</member>
</members>
</doc>
